# Makefile for Wirepas C Mesh API Lib

# Toolchain
CC  := gcc
AS  := as
LD  := ld
AR  := ar

# Paths, including trailing path separator
SOURCEPREFIX   := 
BUILDPREFIX    := build/

# General compiler flags
CFLAGS  := -std=gnu99 -Wall -Werror
# Uncomment the following line only if running with an old stack
#CFLAGS  += -DLEGACY_APP_CONFIG

# Uncomment the following line if you want the per endoint data reception
#CFLAGS  += -DREGISTER_DATA_PER_ENDPOINT

# Targets definition
LIB_NAME := mesh_api_lib.a

TARGET_LIB := $(BUILDPREFIX)$(LIB_NAME)

SOURCES :=

# Add Api header (including logger)
CFLAGS  += -Iapi/

# Include platform module sources
include platform/makefile

# Include WPC generic sources
include wpc/makefile

OBJECTS := $(patsubst $(SOURCEPREFIX)%,                     \
                      $(BUILDPREFIX)%,                      \
                      $(SOURCES:.c=.o))

# Functions

# Use GCC to automatically generate dependency files for C files.
# Also create the target directory if it does not exist
define COMPILE
	echo "  CC $(2)"
	mkdir -p $(dir $(1))
	$(CC) $(CFLAGS) -c -o $(1) $(2)
endef

define LINK_LIB
	echo "  Linking $(1)"
	$(AR) rc -o $(1) $(2)
endef

define CLEAN
	echo "  Cleaning up"
	$(RM) -r $(BUILDPREFIX)
endef

# Target rules

# Use dependency files automatically generated by GCC.
# First collect all C source files
AUTODEPS := $(patsubst $(SOURCEPREFIX)%.c, $(BUILDPREFIX)%.d, $(SOURCES))

ifeq ($(V),1)
# "V=1" on command line, print commands.
else
# Default, do not print commands.
.SILENT:
endif

.PHONY: all
all: lib

lib: $(TARGET_LIB)

.PHONY: clean
clean:
	$(call CLEAN)

$(BUILDPREFIX)%.o: $(SOURCEPREFIX)%.c
	$(call COMPILE,$@,$<)

$(TARGET_LIB): $(OBJECTS)
	$(call LINK_LIB,$@,$^)
